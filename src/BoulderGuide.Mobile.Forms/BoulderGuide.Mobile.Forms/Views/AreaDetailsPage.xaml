<?xml version="1.0" encoding="utf-8" ?>
<TabbedPage xmlns="http://xamarin.com/schemas/2014/forms"
            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:prism="http://prismlibrary.com"
            xmlns:root="clr-namespace:BoulderGuide.Mobile.Forms"
            xmlns:xamForms="clr-namespace:BoulderGuide.Mobile.Forms.XamarinForms"
            xmlns:icons="clr-namespace:BoulderGuide.Mobile.Forms.Icons"
            prism:ViewModelLocator.AutowireViewModel="True"
            x:Class="BoulderGuide.Mobile.Forms.Views.AreaDetailsPage"
            BarBackgroundColor="{StaticResource Primary}"
            Title="{Binding Info.Name}">

   <TabbedPage.Resources>
      <xamForms:ValueToVisibilityConverter x:Key="valueToVisibility" />
      <xamForms:AreasRoutesCountConverter x:Key="AreasRoutesCountConverter" />

      <DataTemplate x:Key="areaDataTemplate">
         <ViewCell>
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
               </Grid.ColumnDefinitions>

               <Label
                  Text="{Static icons:MaterialIconFont.Terrain}"
                  FontFamily="{StaticResource Key=MaterialFontFamily}"
                  VerticalOptions="CenterAndExpand"
                  Margin="5, 0, 0, 0"/>

               <Label
                  Grid.Column="1"
                  Text="{Binding Name}"
                  VerticalOptions="CenterAndExpand"
                  Margin="5, 0, 0, 0"/>

               <Label
                  Grid.Column="3"
                  Text="{Binding ., Converter={StaticResource Key=AreasRoutesCountConverter}}"
                  VerticalOptions="CenterAndExpand"
                  FontSize="Micro" />

               <Label
                  Grid.Column="4"
                  Text="{Static icons:MaterialIconFont.DownloadDone}"
                  HorizontalOptions="End"
                  VerticalOptions="Center"
                  FontFamily="{StaticResource Key=MaterialFontFamily}"
                  IsVisible="{Binding IsOffline}"/>
               <Label
                  Grid.Column="4"
                  Text="{Static icons:MaterialIconFont.CloudDownload}"
                  HorizontalOptions="End"
                  VerticalOptions="Center"
                  FontFamily="{StaticResource Key=MaterialFontFamily}">
                  <Label.Triggers>
                     <DataTrigger TargetType="Label" Binding="{Binding IsOffline}" Value="True">
                        <Setter Property="IsVisible" Value="False" />
                     </DataTrigger>
                  </Label.Triggers>
               </Label>
            </Grid>
         </ViewCell>
      </DataTemplate>

      <DataTemplate x:Key="routeTemplate">
         <ViewCell>
            <Grid>
               <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
               </Grid.ColumnDefinitions>

               <Label
                  Text="{Static icons:MaterialIconFont.Moving}"
                  FontFamily="{StaticResource Key=MaterialFontFamily}"
                  VerticalOptions="CenterAndExpand"
                  Margin="10, 0, 0, 0"/>
               <Label
                  Grid.Column="1"
                  Text="{Binding Name}"
                  VerticalOptions="CenterAndExpand"
                  Margin="10, 0, 0, 0"/>

               <Label
                  Text="{Binding Grade, StringFormat='({0})'}"
                  VerticalOptions="CenterAndExpand"
                  Grid.Column="3"
                  FontSize="Micro" />
            </Grid>
         </ViewCell>
      </DataTemplate>

      <xamForms:AreaRouteDataTemplateSelector
         x:Key="areaRouteDataTemplateSelector"
         AreaTemplate="{StaticResource Key=areaDataTemplate}"
         RouteTemplate="{StaticResource Key=routeTemplate}"/>
   </TabbedPage.Resources>

   <TabbedPage.ToolbarItems>
      <ToolbarItem
         Command="{Binding MapCommand}">
         <ToolbarItem.IconImageSource>
            <FontImageSource
               Glyph="{Static icons:MaterialIconFont.Place}"
               FontFamily="{StaticResource Key=MaterialFontFamily}"/>
         </ToolbarItem.IconImageSource>
      </ToolbarItem>

      <ToolbarItem
         Text="{Static root:Strings.Download}"
         Order="Secondary"
         Command="{Binding DownloadCommand}"/>

      <ToolbarItem
         Text="{Static root:Strings.Filter}"
         Order="Secondary"
         Command="{Binding FilterCommand}" />

      <ToolbarItem
         Text="{Static root:Strings.Order}"
         Order="Secondary"
         Command="{Binding OrderCommand}"/>

   </TabbedPage.ToolbarItems>

   <ContentPage>
      <ContentPage.IconImageSource>
         <FontImageSource
            Glyph="{Static icons:MaterialIconFont.List}"
            FontFamily="{StaticResource Key=MaterialFontFamily}" />
      </ContentPage.IconImageSource>

      <StackLayout>

         <ListView ItemsSource="{Binding Children}"
                     SelectedItem="{Binding SelectedChild}"
                     Margin="10"
                     ItemTemplate="{StaticResource areaRouteDataTemplateSelector}" />

      </StackLayout>

   </ContentPage>

   <ContentPage>
      <ContentPage.IconImageSource>
         <FontImageSource
            Glyph="{Static icons:MaterialIconFont.Info}"
            FontFamily="{StaticResource Key=MaterialFontFamily}" />
      </ContentPage.IconImageSource>

      <ScrollView>
         <StackLayout>
            <Label Text="{Binding Source={Static root:Strings.AreaInfo}}" />
            <Label Text="{Binding Area.Info}" />

            <Label Text="{Binding Source={Static root:Strings.AreaAccess}}"
                   IsVisible="{Binding Area.Access, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Area.Access}"
                   IsVisible="{Binding Area.Access, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Source={Static root:Strings.AreaHistory}}"
                   IsVisible="{Binding Area.History, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Area.History}"
                   IsVisible="{Binding Area.History, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Source={Static root:Strings.AreaEthics}}"
                   IsVisible="{Binding Area.Ethics, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Area.Ethics}"
                   IsVisible="{Binding Area.Ethics, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Source={Static root:Strings.AreaAccommodations}}"
                   IsVisible="{Binding Area.Accommodations, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Area.Accommodations}"
                   IsVisible="{Binding Area.Accommodations, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Source={Static root:Strings.AreaRestrictions}}"
                   IsVisible="{Binding Area.Restrictions, Converter={StaticResource Key=valueToVisibility}}" />
            <Label Text="{Binding Area.Restrictions}"
                   IsVisible="{Binding Area.Restrictions, Converter={StaticResource Key=valueToVisibility}}" />
         </StackLayout>
      </ScrollView>
   </ContentPage>

</TabbedPage>